"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[241],{1083:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"API/search-chain","title":"Search with _include and chain","description":"\\\\include returns resources that are referenced by your primary matches \u2014 essentially the forward side of \\\\revinclude.","source":"@site/docs/API/search-chain.mdx","sourceDirName":"API","slug":"/API/search-chain","permalink":"/docs/API/search-chain","draft":false,"unlisted":false,"editUrl":"https://github.com/couchbaselabs/couchbase-fhir-ce-docs/tree/master/docs/API/search-chain.mdx","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12,"title":"Search with _include and chain"},"sidebar":"tutorialSidebar","previous":{"title":"Search with _revinclude","permalink":"/docs/API/search-revinclude"},"next":{"title":"Search Pagination","permalink":"/docs/API/search-pagination"}}');var i=r(4848),t=r(8453);const c={sidebar_position:12,title:"Search with _include and chain"},a="Search with _include",l={},o=[{value:"How it works",id:"how-it-works",level:2},{value:"How it works",id:"how-it-works-1",level:2},{value:"Under the Hood",id:"under-the-hood",level:2},{value:"Notes &amp; Best Practices",id:"notes--best-practices",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"search-with-_include",children:"Search with _include"})}),"\n",(0,i.jsx)(n.p,{children:"_include returns resources that are referenced by your primary matches \u2014 essentially the forward side of _revinclude."}),"\n",(0,i.jsx)(n.p,{children:"For example, to get all Observations for a code and include the Patient referenced in each Observation:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"curl 'http://localhost/fhir/acme/Observation?code=http%3A%2F%2Floinc.org%7C82810-3&_include=Observation%3Asubject'\n"})}),"\n",(0,i.jsx)(n.p,{children:"Response (200 OK) \u2014 abbreviated:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n  "resourceType": "Bundle",\n  "type": "searchset",\n  "total": 1,\n  "entry": [\n    {\n      "fullUrl": "Observation/pregnancy-status",\n      "resource": {\n        "resourceType": "Observation",\n        "id": "pregnancy-status",\n        "code": {\n          "coding": [\n            { "system": "http://loinc.org", "code": "82810-3", "display": "Pregnancy status" }\n          ]\n        }\n      },\n      "search": { "mode": "match" }\n    },\n    {\n      "fullUrl": "Patient/example",\n      "resource": {\n        "resourceType": "Patient",\n        "id": "example"\n      },\n      "search": { "mode": "include" }\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"FHIR first finds Observation resources matching the search parameters."}),"\n",(0,i.jsx)(n.li,{children:"It inspects each Observation\u2019s subject.reference field."}),"\n",(0,i.jsx)(n.li,{children:"It fetches the Patient resources referenced there."}),"\n",(0,i.jsxs)(n.li,{children:["The resulting Bundle contains:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Observations with ",(0,i.jsx)(n.code,{children:'"search": { "mode": "match" }'})]}),"\n",(0,i.jsxs)(n.li,{children:["Patients with ",(0,i.jsx)(n.code,{children:'"search": { "mode": "include" }'})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["You can specify multiple _include parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["?_include=Observation",":subject","&_include=Observation",":performer"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Tip"}),": _include can be used with any reference field listed in the FHIR Search Parameters definition for that resource type."]}),"\n",(0,i.jsx)(n.h1,{id:"search-with-chain",children:"Search with Chain"}),"\n",(0,i.jsx)(n.p,{children:"Chained parameters let you filter resources by properties of a referenced resource.\nIn other words: \u201cFind Observations whose Patient\u2019s name is Baxter.\u201d"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"curl 'http://localhost/fhir/acme/Observation?subject.name=Baxter'\n"})}),"\n",(0,i.jsx)(n.p,{children:"Response (200 OK) \u2014 abbreviated:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n  "resourceType": "Bundle",\n  "type": "searchset",\n  "total": 46,\n  "entry": [\n    {\n      "fullUrl": "Observation/pregnancy-status",\n      "resource": {\n        "resourceType": "Observation",\n        "id": "pregnancy-status"\n      },\n      "search": { "mode": "match" }\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"how-it-works-1",children:"How it works"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"subject"})," is a reference field on Observation."]}),"\n",(0,i.jsx)(n.li,{children:"The server performs a subquery on the referenced type (Patient), finding all Patients with name=Baxter."}),"\n",(0,i.jsx)(n.li,{children:"Then, it filters Observations whose subject.reference matches those Patient IDs."}),"\n",(0,i.jsxs)(n.li,{children:["This allows expressive queries such as:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Observation?subject.identifier=http://hospital.smarthealthit.org|1032702&Encounter?patient.birthdate=lt1990-01-01&DocumentReference?patient.name=Smith"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"under-the-hood",children:"Under the Hood"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Chaining uses a two-phase lookup:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"FTS query on the referenced type (e.g., Patient) using the chained condition."}),"\n",(0,i.jsx)(n.li,{children:"Use resulting IDs to constrain the primary type (e.g., Observation)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["_include works similarly to _revinclude, but in reverse:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Collect reference fields from primary results (e.g., Observation.subject.reference)."}),"\n",(0,i.jsx)(n.li,{children:"Gather referenced resource keys."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Batch-fetch via KV to build the combined Bundle."}),"\n",(0,i.jsx)(n.li,{children:"Both phases are read-committed; all resources are fetched as committed documents."}),"\n",(0,i.jsx)(n.li,{children:"All keys are de-duplicated before KV retrieval."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"notes--best-practices",children:"Notes & Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"_include and _revinclude can be combined in the same query."}),"\n",(0,i.jsx)(n.li,{children:"_count, _summary, and _elements apply only to primary results in this release."}),"\n",(0,i.jsx)(n.li,{children:"Includes and chained lookups can be expensive \u2014 use narrow filters (like identifiers) for best performance."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>a});var s=r(6540);const i={},t=s.createContext(i);function c(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);