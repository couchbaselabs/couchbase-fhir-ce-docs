"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3846],{3609:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"API/search-pagination","title":"Search Pagination","description":"Couchbase FHIR CE paginates search results (including queries that use \\\\include/\\\\revinclude) and returns a Bundle with type: \\"searchset\\". You control page size with \\\\_count; the server returns a next link while more results remain.","source":"@site/docs/API/search-pagination.mdx","sourceDirName":"API","slug":"/API/search-pagination","permalink":"/docs/API/search-pagination","draft":false,"unlisted":false,"editUrl":"https://github.com/couchbaselabs/couchbase-fhir-ce-docs/tree/master/docs/API/search-pagination.mdx","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13,"title":"Search Pagination"},"sidebar":"tutorialSidebar","previous":{"title":"Search with _include and chain","permalink":"/docs/API/search-chain"}}');var i=r(4848),t=r(8453);const a={sidebar_position:13,title:"Search Pagination"},l="Search Pagination",c={},d=[{value:"Example",id:"example",level:3},{value:"Request",id:"request",level:4},{value:"Response (200 OK) \u2014 abbreviated:",id:"response-200-ok--abbreviated",level:4},{value:"Defaults &amp; Limits",id:"defaults--limits",level:2},{value:"How Paging Works (Server Flow)",id:"how-paging-works-server-flow",level:2},{value:"Key discovery (FTS)",id:"key-discovery-fts",level:3},{value:"Key buffer",id:"key-buffer",level:3},{value:"Subsequent pages",id:"subsequent-pages",level:3},{value:"What Gets Paged?",id:"what-gets-paged",level:3},{value:"Links",id:"links",level:3},{value:"Totals",id:"totals",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Error Cases",id:"error-cases",level:2},{value:"Summary",id:"summary",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"search-pagination",children:"Search Pagination"})}),"\n",(0,i.jsx)(n.p,{children:'Couchbase FHIR CE paginates search results (including queries that use _include/_revinclude) and returns a Bundle with type: "searchset". You control page size with _count; the server returns a next link while more results remain.'}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.h4,{id:"request",children:"Request"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GET /fhir/<bucket>/Patient?identifier=system|value&_revinclude=Observation:subject&_count=20\n"})}),"\n",(0,i.jsx)(n.h4,{id:"response-200-ok--abbreviated",children:"Response (200 OK) \u2014 abbreviated:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n  "resourceType": "Bundle",\n  "type": "searchset",\n  "total": 48,\n  "link": [\n    {\n      "relation": "next",\n      "url": "http://localhost/fhir/acme/Patient?_page=8f7315f5d6b545e7b4c8004aa897b911&_offset=20&_count=20"\n    },\n    { "relation": "self", "url": "http://localhost/fhir/acme/Patient?...&_count=20" }\n  ],\n  "entry": [ ... ]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"defaults--limits",children:"Defaults & Limits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Default page size: 50 (if _count omitted)."}),"\n",(0,i.jsx)(n.li,{children:"Hard cap per request: up to 1000 resources (combined primary + includes) returned across all pages."}),"\n",(0,i.jsx)(n.li,{children:"Below this cap, total is accurate."}),"\n",(0,i.jsx)(n.li,{children:"For _revinclude, if 50 primaries match, the secondary (included) budget is 1000 \u2212 50 = 950 for that request."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"We\u2019ll cover general paging here; details of _include/_revinclude behavior are on their respective pages. This page does not dive into spec pagination nuances beyond what you need to use it."}),"\n",(0,i.jsx)(n.h2,{id:"how-paging-works-server-flow",children:"How Paging Works (Server Flow)"}),"\n",(0,i.jsx)(n.h3,{id:"key-discovery-fts",children:"Key discovery (FTS)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The server runs the search with an internal limit of 1000 and collects all matching primary keys."}),"\n",(0,i.jsx)(n.li,{children:"If _revinclude/_include is present, it collects secondary keys within the remaining budget (e.g., 950)."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"key-buffer",children:"Key buffer"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"All keys (primary first, then includes) are deduplicated and stored in a buffer."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Small result sets"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If the buffer size \u2264 _count (or default 50), the server batch-fetches via KV and returns a single page."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Large result sets"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The server creates a pagination state object:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"id = UUID (returned as _page)"}),"\n",(0,i.jsx)(n.li,{children:"offset = starting index into the buffered keys (returned as _offset)"}),"\n",(0,i.jsx)(n.li,{children:"size = _count (fixed for the life of the cursor)"}),"\n",(0,i.jsx)(n.li,{children:"TTL = 15 minutes"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"It returns the first page and a next link:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"...?_page=<UUID>&_offset=<nextOffset>&_count=<size>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"subsequent-pages",children:"Subsequent pages"}),"\n",(0,i.jsx)(n.p,{children:"Each follow-up request uses the _page token; the server resumes from offset, fetches the next slice of keys, and advances offset until exhausted."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Completion / expiry","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"When all pages are served, no next link is returned."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"If the cursor expires (15 min idle), the server returns an OperationOutcome with a paging-token error; simply re-run the original search."}),"\n",(0,i.jsx)(n.li,{children:"Isolation: Results are read-committed; no partial/dirty reads. FTS reflects committed state; KV fetches the current committed versions at response time."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"what-gets-paged",children:"What Gets Paged?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Primary results are paged by _count."}),"\n",(0,i.jsx)(n.li,{children:"For queries with _revinclude / _include, included resources correspond to the primaries on that page."}),"\n",(0,i.jsx)(n.li,{children:"Primary results may be sorted via _sort. Included resources are appended (not globally interleaved with sorted primaries)."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"self"}),": Echoes the current request (host and path preserved)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"next"}),": Contains _page, _offset, and _count parameters."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"totals",children:"Totals"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"total reports the number of primary matches."}),"\n",(0,i.jsx)(n.li,{children:"With the 1000-resource cap, totals are accurate when the complete primary keyset fits under the cap."}),"\n",(0,i.jsx)(n.li,{children:"You can also control total computation using _total=accurate|estimate|none (defaults to accurate under cap)."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use reasonable _count values (e.g., 20\u2013100) for best UX and throughput."}),"\n",(0,i.jsx)(n.li,{children:"Prefer identifier filters to keep primary sets small and predictable."}),"\n",(0,i.jsx)(n.li,{children:"Keep include lists minimal; fetch only what you\u2019ll render."}),"\n",(0,i.jsx)(n.li,{children:"If a next link is present, follow it exactly (don\u2019t reconstruct parameters)."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"error-cases",children:"Error Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Expired _page token (15 min TTL): returns an OperationOutcome\u2014rerun the original search."}),"\n",(0,i.jsx)(n.li,{children:"Invalid _page or _offset: OperationOutcome with processing error."}),"\n",(0,i.jsx)(n.li,{children:"Exceeded cap: The server may truncate includes and add an OperationOutcome warning; primaries remain correct."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Default 50 per page; cap 1000 resources total (primary + includes)."}),"\n",(0,i.jsx)(n.li,{children:"Two-phase FTS \u2192 buffered keys \u2192 batched KV fetch."}),"\n",(0,i.jsx)(n.li,{children:"Cursor state via _page + _offset, 15-minute TTL."}),"\n",(0,i.jsx)(n.li,{children:"total reflects primary matches; includes are per-page companions."}),"\n",(0,i.jsx)(n.li,{children:"Accurate, fast, and consistent paging semantics built on FTS + KV."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var s=r(6540);const i={},t=s.createContext(i);function a(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);