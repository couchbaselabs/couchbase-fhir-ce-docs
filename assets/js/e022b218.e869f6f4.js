"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[675],{1849:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"API/put-update","title":"PUT - Update Resource","description":"When you send a PUT request to a specific resource ID that already exists, the server treats it as an update operation. The resource is replaced with the new payload, and the system automatically updates its metadata and history.","source":"@site/docs/API/put-update.mdx","sourceDirName":"API","slug":"/API/put-update","permalink":"/docs/API/put-update","draft":false,"unlisted":false,"editUrl":"https://github.com/couchbaselabs/couchbase-fhir-ce-docs/tree/master/docs/API/put-update.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"PUT - Update Resource"},"sidebar":"tutorialSidebar","previous":{"title":"PUT Single Resource","permalink":"/docs/API/put-single"},"next":{"title":"PATCH Resource","permalink":"/docs/API/patch"}}');var i=n(4848),r=n(8453);const a=n.p+"assets/images/put-update-50aa3da460109a2e5880f40a34a4d8b8.png",d={sidebar_position:4,title:"PUT - Update Resource"},l="PUT \u2014 Update an Existing Resource",c={},o=[{value:"How the Update Works Internally",id:"how-the-update-works-internally",level:2},{value:"metadata recap",id:"metadata-recap",level:3},{value:"Data in Couchbase",id:"data-in-couchbase",level:3},{value:"Validation",id:"validation",level:2},{value:"FHIR Semantics",id:"fhir-semantics",level:3},{value:"Summary",id:"summary",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"put--update-an-existing-resource",children:"PUT \u2014 Update an Existing Resource"})}),"\n",(0,i.jsx)(t.p,{children:"When you send a PUT request to a specific resource ID that already exists, the server treats it as an update operation. The resource is replaced with the new payload, and the system automatically updates its metadata and history."}),"\n",(0,i.jsx)(t.p,{children:"In this example, you update the existing Patient/1234 by adding a telecom element."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"PUT http://localhost/fhir/acme/Patient/1234\n"})}),"\n",(0,i.jsx)("img",{src:a,alt:"ImgPutUpdate"}),"\n",(0,i.jsx)(t.p,{children:"The server responds with:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"HTTP 200 OK \u2014 indicating an update (not a new create)"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"An updated resource where:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:'versionId increments (from "1" \u2192 "2")'}),"\n",(0,i.jsx)(t.li,{children:"lastUpdated reflects the new timestamp"}),"\n",(0,i.jsx)(t.li,{children:"tag changes to updated-by"}),"\n",(0,i.jsx)(t.li,{children:"The payload includes the new telecom array"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"how-the-update-works-internally",children:"How the Update Works Internally"}),"\n",(0,i.jsx)(t.p,{children:"Every PUT is wrapped in a transaction to ensure consistency and preserve history:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:'Begin transaction\n  Check existence of Patient/1234 in the Patient collection\n    Found \u2192 this is an update\n    *Versioning & history*\n    Copy the current version of Patient/1234 into the Versions collection\n    Increment meta.versionId (e.g., "1" \u2192 "2")\n  Apply update\n    Replace the existing document in Patient collection with the new payload\n  Update meta.lastUpdated\n  Add audit tag:\n  {\n    "system": "http://couchbase.fhir.com/fhir/custom-tags",\n    "code": "updated-by",\n    "display": "user:anonymous"\n  }\nCommit transaction\n'})}),"\n",(0,i.jsx)(t.p,{children:"This ensures:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Previous versions are preserved (for _history and vread)"}),"\n",(0,i.jsx)(t.li,{children:"Updates are atomic"}),"\n",(0,i.jsx)(t.li,{children:"The active resource always represents the latest version"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"metadata-recap",children:"metadata recap"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Meaning"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"versionId"})})}),(0,i.jsx)(t.td,{children:"Incremented with every PUT update"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"lastUpdated"})})}),(0,i.jsx)(t.td,{children:"Timestamp of the latest modification"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"tag"})})}),(0,i.jsxs)(t.td,{children:["Audit trail: ",(0,i.jsx)(t.code,{children:"created-by"})," on first insert, ",(0,i.jsx)(t.code,{children:"updated-by"})," on later changes"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"profile"})})}),(0,i.jsx)(t.td,{children:"Added automatically if bucket is configured with a profile (e.g. US Core)"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"data-in-couchbase",children:"Data in Couchbase"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Collection"}),(0,i.jsx)(t.th,{children:"Contents"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Resources.Patient"})}),(0,i.jsxs)(t.td,{children:["Latest version of ",(0,i.jsx)(t.code,{children:"Patient/1234"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Resources.Versions"})}),(0,i.jsx)(t.td,{children:"Archived prior versions for history retrieval"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Resources.Tombstones"})}),(0,i.jsx)(t.td,{children:"Only used for soft deletes"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"validation",children:"Validation"}),"\n",(0,i.jsx)(t.p,{children:"As with POST, the server validates the incoming payload if validation is enabled:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Strict"})," \u2192 reject if invalid"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Lenient"})," \u2192 accept but log warnings"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Disabled"})," \u2192 skip validation entirely"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"fhir-semantics",children:"FHIR Semantics"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"PUT is idempotent: repeating the same request yields the same final state."}),"\n",(0,i.jsx)(t.li,{children:"The entire resource is replaced \u2014 omitted fields are removed."}),"\n",(0,i.jsxs)(t.li,{children:["Use ",(0,i.jsx)(t.strong,{children:"PATCH"})," if you only need partial updates."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"PUT to an existing ID \u2192 update"}),"\n",(0,i.jsx)(t.li,{children:"Server increments versionId and updates metadata"}),"\n",(0,i.jsx)(t.li,{children:"Previous version stored in Versions"}),"\n",(0,i.jsx)(t.li,{children:"Response: 200 OK + latest resource"}),"\n",(0,i.jsx)(t.li,{children:"Fully compliant with FHIR R4 RESTful rules"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>d});var s=n(6540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);