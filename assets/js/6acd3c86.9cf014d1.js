"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5465],{58:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"API/post-single","title":"POST Single Resource","description":"The POST operation is used to create a new FHIR resource in the target tenant bucket.","source":"@site/docs/API/post-single.mdx","sourceDirName":"API","slug":"/API/post-single","permalink":"/docs/API/post-single","draft":false,"unlisted":false,"editUrl":"https://github.com/couchbaselabs/couchbase-fhir-ce-docs/tree/master/docs/API/post-single.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"POST Single Resource"},"sidebar":"tutorialSidebar","previous":{"title":"Introduction to REST API","permalink":"/docs/API/Intro"},"next":{"title":"PUT Single Resource","permalink":"/docs/API/put-single"}}');var s=i(4848),r=i(8453);const a=i.p+"assets/images/post-single-a5e4c5758a57dcc53e82cd4e256a0b9a.png",o={sidebar_position:2,title:"POST Single Resource"},l="POST \u2014 Create a Resource",d={},c=[{value:"ID Handling",id:"id-handling",level:2},{value:"When you perform a POST:",id:"when-you-perform-a-post",level:3},{value:"Metadata: meta Element",id:"metadata-meta-element",level:2},{value:"Response",id:"response",level:2},{value:"Notes",id:"notes",level:2},{value:"Validation Behavior",id:"validation-behavior",level:2},{value:"Data Storage",id:"data-storage",level:2},{value:"Summary",id:"summary",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"post--create-a-resource",children:"POST \u2014 Create a Resource"})}),"\n",(0,s.jsx)(n.p,{children:"The POST operation is used to create a new FHIR resource in the target tenant bucket."}),"\n",(0,s.jsx)(n.p,{children:"You send a FHIR-compliant JSON document to the collection endpoint (for example, /Patient) under your tenant base URL:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"http://localhost/fhir/acme/Patient\n"})}),"\n",(0,s.jsx)("img",{src:a,alt:"ImgPostSingle"}),"\n",(0,s.jsx)(n.p,{children:"In the example shown, a Patient resource is posted with basic demographic information."}),"\n",(0,s.jsx)(n.h2,{id:"id-handling",children:"ID Handling"}),"\n",(0,s.jsx)(n.h3,{id:"when-you-perform-a-post",children:"When you perform a POST:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The FHIR server always generates a new UUID for the resource\u2019s id field."}),"\n",(0,s.jsx)(n.li,{children:"If your payload already contains an id, it will be ignored.\nThe server enforces this to ensure all resource identifiers are globally unique and managed consistently."}),"\n",(0,s.jsx)(n.li,{children:"The newly created resource is stored in Couchbase under this generated UUID key."}),"\n",(0,s.jsx)(n.li,{children:"This behavior aligns with the FHIR R4 RESTful specification, which states that clients should not dictate resource IDs when using POST."}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"If you need to control the ID explicitly, use a PUT to a specific endpoint (see update section)."})}),"\n",(0,s.jsx)(n.h2,{id:"metadata-meta-element",children:"Metadata: meta Element"}),"\n",(0,s.jsx)(n.p,{children:"Upon creation, Couchbase FHIR CE automatically populates the resource\u2019s meta section to ensure proper version tracking and provenance:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"versionId"})}),(0,s.jsxs)(n.td,{children:["Incremented each time the resource changes. Starts at ",(0,s.jsx)(n.code,{children:'"1"'})," for a new resource."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"lastUpdated"})}),(0,s.jsx)(n.td,{children:"Server timestamp (ISO 8601) when the resource was created or updated."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"profile"})}),(0,s.jsxs)(n.td,{children:["Added automatically if the bucket is configured with a ",(0,s.jsx)(n.strong,{children:"validation profile"})," (e.g., US Core). Indicates the resource\u2019s compliance with that profile."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"tag"})}),(0,s.jsxs)(n.td,{children:["Custom tags for auditing, typically including creator identity, source, or processing flags. In this example, a ",(0,s.jsx)(n.code,{children:"created-by"})," tag identifies the user or process that created the resource."]})]})]})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The meta element is managed exclusively by the server \u2014 clients should not attempt to modify it."}),"\n",(0,s.jsxs)(n.li,{children:["This metadata ensures the resource is:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Versioned (for _history and optimistic concurrency)"}),"\n",(0,s.jsx)(n.li,{children:"Traceable (who created/updated)"}),"\n",(0,s.jsx)(n.li,{children:"Profile-aware (validated against the configured IG)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.p,{children:"HTTP Status: 201 Created"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Response Body"}),": The newly created resource, including server-assigned fields (id, meta, etc.)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Location Header"}),": Contains the canonical URL of the new resource (e.g., /fhir/acme/Patient/id)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This confirms successful creation and provides the resource URL for future operations."}),"\n",(0,s.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Each POST operation inserts a new resource; it never overwrites existing ones."}),"\n",(0,s.jsx)(n.li,{children:"To update an existing resource (keeping its ID), use PUT."}),"\n",(0,s.jsx)(n.li,{children:"Soft deletion and versioning are handled automatically; prior versions are stored in the Versions collection."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"validation-behavior",children:"Validation Behavior"}),"\n",(0,s.jsx)(n.p,{children:"If validation is enabled for the bucket:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The payload is checked against FHIR R4 or US Core 6.1.0 (depending on configuration)."}),"\n",(0,s.jsxs)(n.li,{children:["Validation errors will:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Reject the request in Strict mode,"}),"\n",(0,s.jsx)(n.li,{children:"Log warnings in Lenient mode,"}),"\n",(0,s.jsx)(n.li,{children:"or be skipped in Disabled mode."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-storage",children:"Data Storage"}),"\n",(0,s.jsx)(n.p,{children:"Behind the scenes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The resource is stored as JSON in Couchbase (e.g. Resources.Patient collection)."}),"\n",(0,s.jsx)(n.li,{children:"Indexed via Full Text Search (FTS) for subsequent queries."}),"\n",(0,s.jsx)(n.li,{children:"Assigned a unique key (Patient/id), maintaining full traceability and version control."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use POST to create new resources."}),"\n",(0,s.jsx)(n.li,{children:"The server generates the ID and meta information."}),"\n",(0,s.jsx)(n.li,{children:"The response returns the complete canonical version of the resource."}),"\n",(0,s.jsx)(n.li,{children:"Validations, profiles, and audit tags are applied automatically."}),"\n",(0,s.jsx)(n.li,{children:"Fully compliant with FHIR R4 RESTful API semantics."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);